/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package btllib;

public class stHashIterator {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected stHashIterator(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(stHashIterator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        btllibJNI.delete_stHashIterator(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_t_t parseSeed(SWIGTYPE_p_std__vectorT_std__string_t seedString) {
    return new SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_t_t(btllibJNI.stHashIterator_parseSeed(SWIGTYPE_p_std__vectorT_std__string_t.getCPtr(seedString)), true);
  }

  public stHashIterator() {
    this(btllibJNI.new_stHashIterator__SWIG_0(), true);
  }

  public stHashIterator(String seq, SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_t_t seed, long h, long k) {
    this(btllibJNI.new_stHashIterator__SWIG_1(seq, SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_t_t.getCPtr(seed), h, k), true);
  }

  public void init() {
    btllibJNI.stHashIterator_init(swigCPtr, this);
  }

  public void next() {
    btllibJNI.stHashIterator_next(swigCPtr, this);
  }

  public long pos() {
    return btllibJNI.stHashIterator_pos(swigCPtr, this);
  }

  public SWIGTYPE_p_bool strandArray() {
    long cPtr = btllibJNI.stHashIterator_strandArray(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_bool(cPtr, false);
  }

  public SWIGTYPE_p_uint64_t __ref__() {
    long cPtr = btllibJNI.stHashIterator___ref__(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_uint64_t(cPtr, false);
  }

  public static stHashIterator end() {
    return new stHashIterator(btllibJNI.stHashIterator_end(), true);
  }

}
