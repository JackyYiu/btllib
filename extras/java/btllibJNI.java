/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package btllib;

public class btllibJNI {
  public final static native int SeqReader_FOLD_CASE_get();
  public final static native int SeqReader_NO_FOLD_CASE_get();
  public final static native int SeqReader_NO_TRIM_MASKED_get();
  public final static native int SeqReader_TRIM_MASKED_get();
  public final static native long new_SeqReader__SWIG_0(String jarg1, int jarg2);
  public final static native long new_SeqReader__SWIG_1(String jarg1);
  public final static native void delete_SeqReader(long jarg1);
  public final static native void SeqReader_close(long jarg1, SeqReader jarg1_);
  public final static native boolean SeqReader_flagFoldCase(long jarg1, SeqReader jarg1_);
  public final static native boolean SeqReader_flagTrimMasked(long jarg1, SeqReader jarg1_);
  public final static native int SeqReader_get_format(long jarg1, SeqReader jarg1_);
  public final static native void SeqReader_Record_name_set(long jarg1, SeqReader.Record jarg1_, String jarg2);
  public final static native String SeqReader_Record_name_get(long jarg1, SeqReader.Record jarg1_);
  public final static native void SeqReader_Record_comment_set(long jarg1, SeqReader.Record jarg1_, String jarg2);
  public final static native String SeqReader_Record_comment_get(long jarg1, SeqReader.Record jarg1_);
  public final static native void SeqReader_Record_seq_set(long jarg1, SeqReader.Record jarg1_, String jarg2);
  public final static native String SeqReader_Record_seq_get(long jarg1, SeqReader.Record jarg1_);
  public final static native void SeqReader_Record_qual_set(long jarg1, SeqReader.Record jarg1_, String jarg2);
  public final static native String SeqReader_Record_qual_get(long jarg1, SeqReader.Record jarg1_);
  public final static native long new_SeqReader_Record();
  public final static native void delete_SeqReader_Record(long jarg1);
  public final static native long SeqReader_read(long jarg1, SeqReader jarg1_);
  public final static native void delete_Vertex(long jarg1);
  public final static native void delete_Edge(long jarg1);
  public final static native long new_Graph();
  public final static native long Graph_add_vertex(long jarg1, Graph jarg1_);
  public final static native void Graph_remove_vertex(long jarg1, Graph jarg1_, long jarg2, Vertex jarg2_);
  public final static native long Graph_add_edge(long jarg1, Graph jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_);
  public final static native void Graph_remove_edge(long jarg1, Graph jarg1_, long jarg2, Edge jarg2_);
  public final static native String Graph_to_string(long jarg1, Graph jarg1_);
  public final static native void delete_Graph(long jarg1);
  public final static native long split(String jarg1, String jarg2);
  public final static native void ltrim(long jarg1);
  public final static native void rtrim(long jarg1);
  public final static native void trim(long jarg1);
  public final static native boolean starts_with(String jarg1, String jarg2);
  public final static native boolean ends_with(String jarg1, String jarg2);
  public final static native int fd_close(int jarg1);
  public final static native long new__Pipeline__SWIG_0();
  public final static native long new__Pipeline__SWIG_1(int jarg1, long jarg2, long jarg3);
  public final static native void _Pipeline_fd_set(long jarg1, _Pipeline jarg1_, int jarg2);
  public final static native int _Pipeline_fd_get(long jarg1, _Pipeline jarg1_);
  public final static native void _Pipeline_pid_first_set(long jarg1, _Pipeline jarg1_, long jarg2);
  public final static native long _Pipeline_pid_first_get(long jarg1, _Pipeline jarg1_);
  public final static native void _Pipeline_pid_last_set(long jarg1, _Pipeline jarg1_, long jarg2);
  public final static native long _Pipeline_pid_last_get(long jarg1, _Pipeline jarg1_);
  public final static native void delete__Pipeline(long jarg1);
  public final static native String get_saveload_cmd(String jarg1, int jarg2);
  public final static native long run_saveload_cmd(String jarg1, int jarg2);
  public final static native long new_DataSource(String jarg1);
  public final static native void delete_DataSource(long jarg1);
  public final static native void DataSource_close(long jarg1, DataSource jarg1_);
  public final static native void DataSource_pipeline_set(long jarg1, DataSource jarg1_, long jarg2, _Pipeline jarg2_);
  public final static native long DataSource_pipeline_get(long jarg1, DataSource jarg1_);
  public final static native void DataSource_closed_set(long jarg1, DataSource jarg1_, boolean jarg2);
  public final static native boolean DataSource_closed_get(long jarg1, DataSource jarg1_);
  public final static native long new_DataSink(String jarg1, boolean jarg2);
  public final static native void delete_DataSink(long jarg1);
  public final static native void DataSink_close(long jarg1, DataSink jarg1_);
  public final static native void DataSink_pipeline_set(long jarg1, DataSink jarg1_, long jarg2, _Pipeline jarg2_);
  public final static native long DataSink_pipeline_get(long jarg1, DataSink jarg1_);
  public final static native void DataSink_closed_set(long jarg1, DataSink jarg1_, boolean jarg2);
  public final static native boolean DataSink_closed_get(long jarg1, DataSink jarg1_);
  public final static native void sigchld_handler(int jarg1);
  public final static native boolean data_saveload_init();
  public final static native boolean data_saveload_initialized_get();
  public final static native String get_time();
  public final static native void log_info(String jarg1);
  public final static native void log_warning(String jarg1);
  public final static native void log_error(String jarg1);
  public final static native void check_error(boolean jarg1, String jarg2);
  public final static native void check_warning(boolean jarg1, String jarg2);
  public final static native void check_stream(long jarg1, String jarg2);
  public final static native long new_CountingBloomFilter(long jarg1);
  public final static native void CountingBloomFilter_insert__SWIG_0(long jarg1, CountingBloomFilter jarg1_, long jarg2);
  public final static native void CountingBloomFilter_insert__SWIG_1(long jarg1, CountingBloomFilter jarg1_, long jarg2);
  public final static native long CountingBloomFilter_count__SWIG_0(long jarg1, CountingBloomFilter jarg1_, long jarg2);
  public final static native long CountingBloomFilter_count__SWIG_1(long jarg1, CountingBloomFilter jarg1_, long jarg2);
  public final static native void delete_CountingBloomFilter(long jarg1);
  public final static native long fd_write(int jarg1, long jarg2, long jarg3);
  public final static native long new_SeqWriter__SWIG_0(String jarg1, int jarg2, boolean jarg3);
  public final static native long new_SeqWriter__SWIG_1(String jarg1, int jarg2);
  public final static native long new_SeqWriter__SWIG_2(String jarg1);
  public final static native void SeqWriter_close(long jarg1, SeqWriter jarg1_);
  public final static native void SeqWriter_write(long jarg1, SeqWriter jarg1_, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native void delete_SeqWriter(long jarg1);
  public final static native String COMPLEMENTS_get();
  public final static native String CAPITALS_get();
  public final static native long new_CountingKmerSet(long jarg1, long jarg2);
  public final static native void CountingKmerSet_insert(long jarg1, CountingKmerSet jarg1_, String jarg2);
  public final static native long CountingKmerSet_count(long jarg1, CountingKmerSet jarg1_, String jarg2);
  public final static native void delete_CountingKmerSet(long jarg1);
  public final static native long new_BloomFilter__SWIG_0();
  public final static native long new_BloomFilter__SWIG_1(long jarg1, long jarg2);
  public final static native long new_BloomFilter__SWIG_2(String jarg1);
  public final static native void delete_BloomFilter(long jarg1);
  public final static native void BloomFilter_insert__SWIG_0(long jarg1, BloomFilter jarg1_, long jarg2);
  public final static native void BloomFilter_insert__SWIG_1(long jarg1, BloomFilter jarg1_, long jarg2);
  public final static native boolean BloomFilter_contains__SWIG_0(long jarg1, BloomFilter jarg1_, long jarg2);
  public final static native boolean BloomFilter_contains__SWIG_1(long jarg1, BloomFilter jarg1_, long jarg2);
  public final static native long BloomFilter_get_size(long jarg1, BloomFilter jarg1_);
  public final static native long BloomFilter_get_pop_cnt(long jarg1, BloomFilter jarg1_);
  public final static native long BloomFilter_get_hash_num(long jarg1, BloomFilter jarg1_);
  public final static native double BloomFilter_get_fpr(long jarg1, BloomFilter jarg1_);
  public final static native void BloomFilter_write(long jarg1, BloomFilter jarg1_, String jarg2);
  public final static native long new_KmerSet(long jarg1, long jarg2);
  public final static native void KmerSet_insert(long jarg1, KmerSet jarg1_, String jarg2);
  public final static native boolean KmerSet_contains(long jarg1, KmerSet jarg1_, String jarg2);
  public final static native void delete_KmerSet(long jarg1);
}
